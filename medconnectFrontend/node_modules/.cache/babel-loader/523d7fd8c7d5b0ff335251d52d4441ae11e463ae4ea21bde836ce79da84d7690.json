{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Hackathons\\\\Antino\\\\MedConnect\\\\medconnect-frontend\\\\src\\\\pages\\\\SymptomCapturePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/SymptomCapturePage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SymptomCapturePage = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState('en-IN'); // Default to English (India)\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const recognitionRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // List of supported languages\n  const languages = [{\n    code: 'en-IN',\n    name: 'English'\n  }, {\n    code: 'hi-IN',\n    name: 'Hindi'\n  }, {\n    code: 'ta-IN',\n    name: 'Tamil'\n  }, {\n    code: 'bn-IN',\n    name: 'Bengali'\n  }, {\n    code: 'te-IN',\n    name: 'Telugu'\n  }, {\n    code: 'mr-IN',\n    name: 'Marathi'\n  }, {\n    code: 'gu-IN',\n    name: 'Gujarati'\n  }, {\n    code: 'kn-IN',\n    name: 'Kannada'\n  }, {\n    code: 'ml-IN',\n    name: 'Malayalam'\n  }];\n\n  // Initialize speech recognition\n  useEffect(() => {\n    // Check if browser supports SpeechRecognition\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Your browser does not support speech recognition. Please try Chrome or Edge.');\n      return;\n    }\n\n    // Initialize SpeechRecognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = true;\n    recognitionRef.current.lang = selectedLanguage;\n    recognitionRef.current.onresult = event => {\n      let interimTranscript = '';\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript + ' ';\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n      setTranscript(prev => prev + finalTranscript);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error('Speech recognition error', event.error);\n      setIsRecording(false);\n    };\n    recognitionRef.current.onend = () => {\n      if (isRecording) {\n        // If still recording, restart recognition (for continuous recording)\n        recognitionRef.current.start();\n      }\n    };\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [selectedLanguage, isRecording]);\n\n  // Update recognition language when language selection changes\n  useEffect(() => {\n    if (recognitionRef.current) {\n      recognitionRef.current.lang = selectedLanguage;\n    }\n  }, [selectedLanguage]);\n  const toggleRecording = () => {\n    if (isRecording) {\n      recognitionRef.current.stop();\n      setIsRecording(false);\n    } else {\n      setIsRecording(true);\n      recognitionRef.current.start();\n    }\n  };\n  const handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    setUploadedFiles(prevFiles => [...prevFiles, ...files]);\n  };\n  const removeFile = index => {\n    setUploadedFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async () => {\n    if (!transcript.trim() && uploadedFiles.length === 0) {\n      alert('Please provide symptom description or upload medical reports.');\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      // Create form data to send files and text\n      const formData = new FormData();\n      formData.append('symptomDescription', transcript);\n      formData.append('language', selectedLanguage);\n      uploadedFiles.forEach((file, index) => {\n        formData.append(`medicalReport_${index}`, file);\n      });\n\n      // Example API call - replace with your actual backend endpoint\n      // const response = await fetch('https://your-backend-api.com/symptoms', {\n      //   method: 'POST',\n      //   body: formData,\n      // });\n\n      // Simulate API call for now\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // if (!response.ok) throw new Error('Failed to submit data');\n      // const data = await response.json();\n\n      setSubmitSuccess(true);\n      // Redirect or show success message\n    } catch (error) {\n      console.error('Error submitting data:', error);\n      alert('Failed to submit data. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const clearAll = () => {\n    setTranscript('');\n    setUploadedFiles([]);\n    setSubmitSuccess(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-capture-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"capture-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Describe Your Symptoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Speak or type your symptoms, and upload any relevant medical reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), submitSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Information Submitted Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We're analyzing your symptoms and finding the best doctor match for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/doctor-recommendations\",\n          className: \"primary-button\",\n          children: \"View Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearAll,\n          className: \"secondary-button\",\n          children: \"Submit Another\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-select\",\n          children: \"Select Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-select\",\n          value: selectedLanguage,\n          onChange: e => setSelectedLanguage(e.target.value),\n          disabled: isRecording,\n          children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.code,\n            children: lang.name\n          }, lang.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `record-button ${isRecording ? 'recording' : ''}`,\n            onClick: toggleRecording,\n            disabled: isSubmitting,\n            children: isRecording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-stop-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), \" Stop Recording\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-microphone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), \" Start Recording\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator\",\n            children: \"Recording...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Symptom Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: transcript,\n            onChange: e => setTranscript(e.target.value),\n            placeholder: \"Your spoken symptoms will appear here. You can also type or edit directly.\",\n            rows: 8,\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload Medical Reports (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload any relevant medical reports, test results, or previous diagnoses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            onClick: () => fileInputRef.current.click(),\n            disabled: isSubmitting,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-file-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), \" Select Files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileUpload,\n            multiple: true,\n            accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n            style: {\n              display: 'none'\n            },\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-files\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Uploaded Files:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-file-medical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-file\",\n                onClick: () => removeFile(index),\n                disabled: isSubmitting,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleSubmit,\n          disabled: isSubmitting || !transcript.trim() && uploadedFiles.length === 0,\n          children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-spinner fa-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), \" Processing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), \" Submit Information\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-button\",\n          onClick: clearAll,\n          disabled: isSubmitting || !transcript.trim() && uploadedFiles.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), \" Clear All\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(SymptomCapturePage, \"8vhLTnwKY8r83j60FZ+83aUJSjQ=\");\n_c = SymptomCapturePage;\nexport default SymptomCapturePage;\nvar _c;\n$RefreshReg$(_c, \"SymptomCapturePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SymptomCapturePage","_s","isRecording","setIsRecording","transcript","setTranscript","uploadedFiles","setUploadedFiles","selectedLanguage","setSelectedLanguage","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","recognitionRef","fileInputRef","languages","code","name","window","alert","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","length","isFinal","prev","onerror","console","error","onend","start","stop","toggleRecording","handleFileUpload","e","files","Array","from","target","prevFiles","removeFile","index","filter","_","handleSubmit","trim","formData","FormData","append","forEach","file","Promise","resolve","setTimeout","clearAll","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","htmlFor","id","value","onChange","disabled","map","placeholder","rows","click","type","ref","multiple","accept","style","display","_c","$RefreshReg$"],"sources":["C:/Coding/Hackathons/Antino/MedConnect/medconnect-frontend/src/pages/SymptomCapturePage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/SymptomCapturePage.css';\r\n\r\nconst SymptomCapturePage = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [selectedLanguage, setSelectedLanguage] = useState('en-IN'); // Default to English (India)\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitSuccess, setSubmitSuccess] = useState(false);\r\n  \r\n  const recognitionRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // List of supported languages\r\n  const languages = [\r\n    { code: 'en-IN', name: 'English' },\r\n    { code: 'hi-IN', name: 'Hindi' },\r\n    { code: 'ta-IN', name: 'Tamil' },\r\n    { code: 'bn-IN', name: 'Bengali' },\r\n    { code: 'te-IN', name: 'Telugu' },\r\n    { code: 'mr-IN', name: 'Marathi' },\r\n    { code: 'gu-IN', name: 'Gujarati' },\r\n    { code: 'kn-IN', name: 'Kannada' },\r\n    { code: 'ml-IN', name: 'Malayalam' }\r\n  ];\r\n\r\n  // Initialize speech recognition\r\n  useEffect(() => {\r\n    // Check if browser supports SpeechRecognition\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      alert('Your browser does not support speech recognition. Please try Chrome or Edge.');\r\n      return;\r\n    }\r\n\r\n    // Initialize SpeechRecognition\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = true;\r\n    recognitionRef.current.lang = selectedLanguage;\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      let interimTranscript = '';\r\n      let finalTranscript = '';\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += transcript + ' ';\r\n        } else {\r\n          interimTranscript += transcript;\r\n        }\r\n      }\r\n\r\n      setTranscript((prev) => prev + finalTranscript);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error('Speech recognition error', event.error);\r\n      setIsRecording(false);\r\n    };\r\n\r\n    recognitionRef.current.onend = () => {\r\n      if (isRecording) {\r\n        // If still recording, restart recognition (for continuous recording)\r\n        recognitionRef.current.start();\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n    };\r\n  }, [selectedLanguage, isRecording]);\r\n\r\n  // Update recognition language when language selection changes\r\n  useEffect(() => {\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.lang = selectedLanguage;\r\n    }\r\n  }, [selectedLanguage]);\r\n\r\n  const toggleRecording = () => {\r\n    if (isRecording) {\r\n      recognitionRef.current.stop();\r\n      setIsRecording(false);\r\n    } else {\r\n      setIsRecording(true);\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setUploadedFiles((prevFiles) => [...prevFiles, ...files]);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    setUploadedFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!transcript.trim() && uploadedFiles.length === 0) {\r\n      alert('Please provide symptom description or upload medical reports.');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      // Create form data to send files and text\r\n      const formData = new FormData();\r\n      formData.append('symptomDescription', transcript);\r\n      formData.append('language', selectedLanguage);\r\n      \r\n      uploadedFiles.forEach((file, index) => {\r\n        formData.append(`medicalReport_${index}`, file);\r\n      });\r\n\r\n      // Example API call - replace with your actual backend endpoint\r\n      // const response = await fetch('https://your-backend-api.com/symptoms', {\r\n      //   method: 'POST',\r\n      //   body: formData,\r\n      // });\r\n      \r\n      // Simulate API call for now\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // if (!response.ok) throw new Error('Failed to submit data');\r\n      // const data = await response.json();\r\n      \r\n      setSubmitSuccess(true);\r\n      // Redirect or show success message\r\n    } catch (error) {\r\n      console.error('Error submitting data:', error);\r\n      alert('Failed to submit data. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setTranscript('');\r\n    setUploadedFiles([]);\r\n    setSubmitSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"symptom-capture-container\">\r\n      <div className=\"capture-header\">\r\n        <h1>Describe Your Symptoms</h1>\r\n        <p>Speak or type your symptoms, and upload any relevant medical reports</p>\r\n      </div>\r\n\r\n      {submitSuccess ? (\r\n        <div className=\"success-container\">\r\n          <div className=\"success-icon\">\r\n            <i className=\"fas fa-check-circle\"></i>\r\n          </div>\r\n          <h2>Information Submitted Successfully!</h2>\r\n          <p>We're analyzing your symptoms and finding the best doctor match for you.</p>\r\n          <div className=\"success-actions\">\r\n            <Link to=\"/doctor-recommendations\" className=\"primary-button\">\r\n              View Recommendations\r\n            </Link>\r\n            <button onClick={clearAll} className=\"secondary-button\">\r\n              Submit Another\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"language-selector\">\r\n            <label htmlFor=\"language-select\">Select Language:</label>\r\n            <select \r\n              id=\"language-select\" \r\n              value={selectedLanguage} \r\n              onChange={(e) => setSelectedLanguage(e.target.value)}\r\n              disabled={isRecording}\r\n            >\r\n              {languages.map((lang) => (\r\n                <option key={lang.code} value={lang.code}>\r\n                  {lang.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"voice-input-section\">\r\n            <div className=\"voice-controls\">\r\n              <button \r\n                className={`record-button ${isRecording ? 'recording' : ''}`} \r\n                onClick={toggleRecording}\r\n                disabled={isSubmitting}\r\n              >\r\n                {isRecording ? (\r\n                  <>\r\n                    <i className=\"fas fa-stop-circle\"></i> Stop Recording\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <i className=\"fas fa-microphone\"></i> Start Recording\r\n                  </>\r\n                )}\r\n              </button>\r\n              {isRecording && <div className=\"recording-indicator\">Recording...</div>}\r\n            </div>\r\n\r\n            <div className=\"transcript-container\">\r\n              <h3>Your Symptom Description:</h3>\r\n              <textarea\r\n                value={transcript}\r\n                onChange={(e) => setTranscript(e.target.value)}\r\n                placeholder=\"Your spoken symptoms will appear here. You can also type or edit directly.\"\r\n                rows={8}\r\n                disabled={isSubmitting}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"file-upload-section\">\r\n            <h3>Upload Medical Reports (Optional)</h3>\r\n            <p>Upload any relevant medical reports, test results, or previous diagnoses</p>\r\n            \r\n            <div className=\"upload-controls\">\r\n              <button \r\n                className=\"upload-button\" \r\n                onClick={() => fileInputRef.current.click()}\r\n                disabled={isSubmitting}\r\n              >\r\n                <i className=\"fas fa-file-upload\"></i> Select Files\r\n              </button>\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileUpload}\r\n                multiple\r\n                accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n                style={{ display: 'none' }}\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            {uploadedFiles.length > 0 && (\r\n              <div className=\"uploaded-files\">\r\n                <h4>Uploaded Files:</h4>\r\n                <ul>\r\n                  {uploadedFiles.map((file, index) => (\r\n                    <li key={index}>\r\n                      <i className=\"fas fa-file-medical\"></i>\r\n                      <span>{file.name}</span>\r\n                      <button \r\n                        className=\"remove-file\" \r\n                        onClick={() => removeFile(index)}\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        <i className=\"fas fa-times\"></i>\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"submission-section\">\r\n            <button \r\n              className=\"submit-button\" \r\n              onClick={handleSubmit}\r\n              disabled={isSubmitting || (!transcript.trim() && uploadedFiles.length === 0)}\r\n            >\r\n              {isSubmitting ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> Processing...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-paper-plane\"></i> Submit Information\r\n                </>\r\n              )}\r\n            </button>\r\n            <button \r\n              className=\"clear-button\" \r\n              onClick={clearAll}\r\n              disabled={isSubmitting || (!transcript.trim() && uploadedFiles.length === 0)}\r\n            >\r\n              <i className=\"fas fa-trash\"></i> Clear All\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomCapturePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}