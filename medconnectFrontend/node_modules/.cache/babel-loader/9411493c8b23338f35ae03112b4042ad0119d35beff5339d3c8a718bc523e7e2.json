{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Hackathons\\\\Antino\\\\MedConnect\\\\medconnect-frontend\\\\src\\\\pages\\\\SymptomCapturePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/SymptomCapturePage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SymptomCapturePage = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const recognitionRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    if (!('SpeechRecognition' in window || 'webkitSpeechRecognition' in window)) {\n      alert('Your browser does not support speech recognition. Please use Google Chrome.');\n      return;\n    }\n    recognitionRef.current = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognitionRef.current.continuous = false; // Set to true for continuous recognition\n    recognitionRef.current.interimResults = false; // Set to true for interim results\n    recognitionRef.current.lang = 'en-IN'; // Set the default language\n\n    recognitionRef.current.onstart = () => {\n      console.log('Speech recognition service has started');\n    };\n    recognitionRef.current.onresult = event => {\n      const result = event.results[0][0].transcript;\n      setTranscript(result);\n      console.log(`Recognized: ${result}`);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error('Error occurred in recognition:', event.error);\n    };\n    recognitionRef.current.onend = () => {\n      console.log('Recognition ended');\n      setIsRecording(false);\n    };\n  }, []);\n  const toggleRecording = () => {\n    if (isRecording) {\n      recognitionRef.current.stop();\n      console.log('Stopping recording...');\n      setIsRecording(false);\n    } else {\n      recognitionRef.current.start();\n      console.log('Starting recording...');\n      setIsRecording(true);\n    }\n  };\n  const handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    setUploadedFiles(prevFiles => [...prevFiles, ...files]);\n  };\n  const removeFile = index => {\n    setUploadedFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    if (!transcript.trim() && uploadedFiles.length === 0) {\n      alert('Please provide symptom description or upload medical reports.');\n      setIsSubmitting(false);\n      return;\n    }\n    try {\n      // Create form data to send files and text\n      const formData = new FormData();\n      formData.append('symptomDescription', transcript);\n      uploadedFiles.forEach(file => {\n        formData.append('medicalReports', file);\n      });\n\n      // Make the API call to backend\n      const response = await fetch('http://localhost:5000/api/symptoms', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to submit data');\n      }\n      const data = await response.json();\n      console.log('Submission successful:', data);\n\n      // Store both the recordId and the recommendations data\n      localStorage.setItem('doctorRecommendations', JSON.stringify(data));\n      setSubmitSuccess(true);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n      alert(`Failed to submit data: ${error.message || 'Network error occurred'}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const clearAll = () => {\n    setTranscript('');\n    setUploadedFiles([]);\n    setSubmitSuccess(false);\n    localStorage.removeItem('doctorRecommendations');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-capture-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"capture-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Describe Your Symptoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Speak or type your symptoms, and upload any relevant medical reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), submitSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Information Submitted Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We're analyzing your symptoms and finding the best doctor match for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/doctor-recommendations\",\n          className: \"primary-button\",\n          children: \"View Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearAll,\n          className: \"secondary-button\",\n          children: \"Submit Another\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `record-button ${isRecording ? 'recording' : ''}`,\n            onClick: toggleRecording,\n            disabled: isSubmitting,\n            children: [isRecording ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-stop-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-microphone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), isRecording ? ' Stop Recording' : ' Start Recording']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator\",\n            children: \"Recording...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Symptom Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: transcript,\n              onChange: e => setTranscript(e.target.value),\n              placeholder: \"Your spoken symptoms will appear here. You can also type or edit directly.\",\n              rows: 8,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload Medical Reports (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload any relevant medical reports, test results, or previous diagnoses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            onClick: () => fileInputRef.current.click(),\n            disabled: isSubmitting,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-file-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), \" Select Files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileUpload,\n            multiple: true,\n            accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n            style: {\n              display: 'none'\n            },\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-files\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Uploaded Files:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [file.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFile(index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: isSubmitting,\n        children: \"Submit Symptoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(SymptomCapturePage, \"4soa9g9Kh6F9QYq3dpcXS2Yiko4=\");\n_c = SymptomCapturePage;\nexport default SymptomCapturePage;\nvar _c;\n$RefreshReg$(_c, \"SymptomCapturePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SymptomCapturePage","_s","isRecording","setIsRecording","transcript","setTranscript","uploadedFiles","setUploadedFiles","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","recognitionRef","fileInputRef","window","alert","current","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","console","log","onresult","event","result","results","onerror","error","onend","toggleRecording","stop","start","handleFileUpload","e","files","Array","from","target","prevFiles","removeFile","index","filter","_","i","handleSubmit","preventDefault","trim","length","formData","FormData","append","forEach","file","response","fetch","method","body","headers","ok","errorData","json","Error","message","data","localStorage","setItem","JSON","stringify","clearAll","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","disabled","value","onChange","placeholder","rows","click","type","ref","multiple","accept","style","display","map","name","_c","$RefreshReg$"],"sources":["C:/Coding/Hackathons/Antino/MedConnect/medconnect-frontend/src/pages/SymptomCapturePage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/SymptomCapturePage.css';\r\n\r\nconst SymptomCapturePage = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitSuccess, setSubmitSuccess] = useState(false);\r\n  \r\n  const recognitionRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Initialize speech recognition\r\n  useEffect(() => {\r\n    if (!('SpeechRecognition' in window || 'webkitSpeechRecognition' in window)) {\r\n      alert('Your browser does not support speech recognition. Please use Google Chrome.');\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    recognitionRef.current.continuous = false; // Set to true for continuous recognition\r\n    recognitionRef.current.interimResults = false; // Set to true for interim results\r\n    recognitionRef.current.lang = 'en-IN'; // Set the default language\r\n\r\n    recognitionRef.current.onstart = () => {\r\n      console.log('Speech recognition service has started');\r\n    };\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const result = event.results[0][0].transcript;\r\n      setTranscript(result);\r\n      console.log(`Recognized: ${result}`);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error('Error occurred in recognition:', event.error);\r\n    };\r\n\r\n    recognitionRef.current.onend = () => {\r\n      console.log('Recognition ended');\r\n      setIsRecording(false);\r\n    };\r\n  }, []);\r\n\r\n  const toggleRecording = () => {\r\n    if (isRecording) {\r\n      recognitionRef.current.stop();\r\n      console.log('Stopping recording...');\r\n      setIsRecording(false);\r\n    } else {\r\n      recognitionRef.current.start();\r\n      console.log('Starting recording...');\r\n      setIsRecording(true);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setUploadedFiles((prevFiles) => [...prevFiles, ...files]);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    setUploadedFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    if (!transcript.trim() && uploadedFiles.length === 0) {\r\n      alert('Please provide symptom description or upload medical reports.');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create form data to send files and text\r\n      const formData = new FormData();\r\n      formData.append('symptomDescription', transcript);\r\n      \r\n      uploadedFiles.forEach((file) => {\r\n        formData.append('medicalReports', file);\r\n      });\r\n\r\n      // Make the API call to backend\r\n      const response = await fetch('http://localhost:5000/api/symptoms', {\r\n        method: 'POST',\r\n        body: formData,\r\n        headers: {\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to submit data');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Submission successful:', data);\r\n      \r\n      // Store both the recordId and the recommendations data\r\n      localStorage.setItem('doctorRecommendations', JSON.stringify(data));\r\n      \r\n      setSubmitSuccess(true);\r\n    } catch (error) {\r\n      console.error('Error submitting data:', error);\r\n      alert(`Failed to submit data: ${error.message || 'Network error occurred'}`);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setTranscript('');\r\n    setUploadedFiles([]);\r\n    setSubmitSuccess(false);\r\n    localStorage.removeItem('doctorRecommendations'); \r\n  };\r\n\r\n  return (\r\n    <div className=\"symptom-capture-container\">\r\n      <div className=\"capture-header\">\r\n        <h1>Describe Your Symptoms</h1>\r\n        <p>Speak or type your symptoms, and upload any relevant medical reports</p>\r\n      </div>\r\n\r\n      {submitSuccess ? (\r\n        <div className=\"success-container\">\r\n          <div className=\"success-icon\">\r\n            <i className=\"fas fa-check-circle\"></i>\r\n          </div>\r\n          <h2>Information Submitted Successfully!</h2>\r\n          <p>We're analyzing your symptoms and finding the best doctor match for you.</p>\r\n          <div className=\"success-actions\">\r\n            <Link to=\"/doctor-recommendations\" className=\"primary-button\">\r\n              View Recommendations\r\n            </Link>\r\n            <button onClick={clearAll} className=\"secondary-button\">\r\n              Submit Another\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"voice-input-section\">\r\n            <div className=\"voice-controls\">\r\n              <button \r\n                className={`record-button ${isRecording ? 'recording' : ''}`} \r\n                onClick={toggleRecording}\r\n                disabled={isSubmitting}\r\n              >\r\n                {isRecording ? (\r\n                  <i className=\"fas fa-stop-circle\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-microphone\"></i>\r\n                )}\r\n                {isRecording ? ' Stop Recording' : ' Start Recording'}\r\n              </button>\r\n              {isRecording && <div className=\"recording-indicator\">Recording...</div>}\r\n            </div>\r\n\r\n            <div className=\"transcript-container\">\r\n              <h3>Your Symptom Description:</h3>\r\n              <div className=\"transcript-wrapper\">\r\n                <textarea\r\n                  value={transcript}\r\n                  onChange={(e) => setTranscript(e.target.value)}\r\n                  placeholder=\"Your spoken symptoms will appear here. You can also type or edit directly.\"\r\n                  rows={8}\r\n                  disabled={isSubmitting}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"file-upload-section\">\r\n            <h3>Upload Medical Reports (Optional)</h3>\r\n            <p>Upload any relevant medical reports, test results, or previous diagnoses</p>\r\n            \r\n            <div className=\"upload-controls\">\r\n              <button \r\n                className=\"upload-button\" \r\n                onClick={() => fileInputRef.current.click()}\r\n                disabled={isSubmitting}\r\n              >\r\n                <i className=\"fas fa-file-upload\"></i> Select Files\r\n              </button>\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileUpload}\r\n                multiple\r\n                accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n                style={{ display: 'none' }}\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            {uploadedFiles.length > 0 && (\r\n              <div className=\"uploaded-files\">\r\n                <h4>Uploaded Files:</h4>\r\n                <ul>\r\n                  {uploadedFiles.map((file, index) => (\r\n                    <li key={index}>\r\n                      {file.name}\r\n                      <button onClick={() => removeFile(index)}>Remove</button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <button onClick={handleSubmit} disabled={isSubmitting}>\r\n            Submit Symptoms\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomCapturePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}